{"version":3,"sources":["data/data.ts","components/Dnd/Droppable/Droppable.tsx","components/Dnd/Draggable/Draggable.tsx","components/Letters/Letter.tsx","components/Drawing/Drawing.tsx","components/Letters/Letters.tsx","App.tsx","index.tsx","components/Letters/Letters.module.css"],"names":["Droppable","className","children","id","finalClasses","onDrop","e","preventDefault","data","dataTransfer","getData","target","append","document","getElementById","onDragOver","cells","i","push","v4","content","vowels","vowelsCells","length","consonants","consonantsCells","marks","marksCells","letters","Draggable","draggable","onDragStart","setData","stopPropagation","Letter","styles","dragabble","Canvas","width","height","canvasRef","useRef","useState","isPainting","setIsPainting","undefined","mousePosition","setMousePosition","startPaint","useCallback","event","coordinates","getCoordinates","useEffect","current","canvas","addEventListener","removeEventListener","paint","newMousePosition","drawLine","exitPaint","bb","getBoundingClientRect","offsetX","left","offsetY","top","x","clientX","y","clientY","originalMousePosition","context","getContext","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","ref","defaultProps","window","innerWidth","innerHeight","Letters","paintMode","newLetter","setNewLetter","wrapper","droppable","cellsWrapper","map","c","itemCell","droppableLetters","v","item","style","color","type","autoFocus","onChange","currentTarget","value","onClick","newCell","toUpperCase","App","setPaintMode","aria-hidden","location","reload","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.469868ce.chunk.js","sourcesContent":["import { v4 } from \"uuid\";\r\n\r\nexport type CellsType = {\r\n  id: string;\r\n  content: string;\r\n};\r\n\r\nexport const cells: CellsType[] = [];\r\nfor (let i = 0; i <= 35; i++) {\r\n  cells.push({\r\n    id: v4(),\r\n    content: \"\",\r\n  });\r\n}\r\nexport const vowels = [\"А\", \"Е\", \"Ё\", \"И\", \"О\", \"У\", \"Ы\", \"Э\", \"Ю\", \"Я\"];\r\nexport const vowelsCells: CellsType[] = [];\r\nfor (let i = 0; i <= vowels.length - 1; i++) {\r\n  vowelsCells.push({\r\n    id: v4(),\r\n    content: vowels[i],\r\n  });\r\n}\r\n\r\nexport const consonants = [\r\n  \"Б\",\r\n  \"В\",\r\n  \"Г\",\r\n  \"Д\",\r\n  \"Ж\",\r\n  \"З\",\r\n  \"Й\",\r\n  \"К\",\r\n  \"Л\",\r\n  \"М\",\r\n  \"Н\",\r\n  \"П\",\r\n  \"Р\",\r\n  \"С\",\r\n  \"Т\",\r\n  \"Ф\",\r\n  \"Х\",\r\n  \"Ц\",\r\n  \"Ч\",\r\n  \"Ш\",\r\n  \"Щ\",\r\n];\r\nexport const consonantsCells: CellsType[] = [];\r\nfor (let i = 0; i <= consonants.length - 1; i++) {\r\n  consonantsCells.push({\r\n    id: v4(),\r\n    content: consonants[i],\r\n  });\r\n}\r\nexport const marks = [\"Ь\", \"Ъ\"];\r\nexport const marksCells: CellsType[] = [];\r\nfor (let i = 0; i <= marks.length - 1; i++) {\r\n  marksCells.push({\r\n    id: v4(),\r\n    content: marks[i],\r\n  });\r\n}\r\n\r\nexport const letters = [...vowelsCells, ...consonantsCells, ...marksCells];\r\n","import React, { DetailedHTMLProps, HTMLAttributes, DragEvent } from \"react\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const Droppable: React.FC<DroppablePropsType> = ({\r\n  className,\r\n  children,\r\n  id,\r\n}) => {\r\n  const drop = (e: DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer.getData(\"transfer\");\r\n    (e.target as HTMLDivElement).append(document.getElementById(data)!);\r\n  };\r\n\r\n  const allowDrop = (e: DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n  };\r\n  const finalClasses = `${className ? className : \"\"}`;\r\n  return (\r\n    <div id={id} onDrop={drop} onDragOver={allowDrop} className={finalClasses}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\ntype PropsType = {\r\n  id: string;\r\n};\r\ntype DroppablePropsType = DefaultDivPropsType & PropsType;\r\n","import React, { DetailedHTMLProps, HTMLAttributes, DragEvent } from \"react\";\r\n\r\nexport const Draggable: React.FC<DraggablePropsType> = ({\r\n  id,\r\n  className,\r\n  children,\r\n}) => {\r\n  const drag = (e: DragEvent<HTMLDivElement>) => {\r\n    e.dataTransfer.setData(\"transfer\", (e.target as HTMLDivElement).id);\r\n  };\r\n\r\n  const notAllowDrop = (e: DragEvent<HTMLDivElement>) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const finalClasses = `${className ? className : \"\"}`;\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={finalClasses}\r\n      draggable\r\n      onDragStart={drag}\r\n      onDragOver={notAllowDrop}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\ntype PropsType = {\r\n  id: string;\r\n};\r\ntype DraggablePropsType = DefaultDivPropsType & PropsType;\r\n","import React, { DetailedHTMLProps, HTMLAttributes } from \"react\";\r\nimport { Draggable } from \"../Dnd/Draggable/Draggable\";\r\nimport styles from \"./Letters.module.css\";\r\n\r\nexport const Letter: React.FC<LetterPropsType> = ({\r\n  className,\r\n  id,\r\n  content,\r\n}) => {\r\n  const finalClasses = `${className ? className : \"\"}`;\r\n  return (\r\n    <Draggable id={id} className={styles.dragabble}>\r\n      <div className={finalClasses}>{content}</div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\ntype PropsType = {\r\n  id: string;\r\n  content: string;\r\n};\r\ntype LetterPropsType = DefaultDivPropsType & PropsType;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\ninterface CanvasProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ntype Coordinate = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport const Canvas = ({ width, height }: CanvasProps) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [isPainting, setIsPainting] = useState(false);\r\n  const [mousePosition, setMousePosition] = useState<Coordinate | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const startPaint = useCallback((event: MouseEvent) => {\r\n    const coordinates = getCoordinates(event);\r\n    if (coordinates) {\r\n      setMousePosition(coordinates);\r\n      setIsPainting(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    canvas.addEventListener(\"mousedown\", startPaint);\r\n    return () => {\r\n      canvas.removeEventListener(\"mousedown\", startPaint);\r\n    };\r\n  }, [startPaint]);\r\n\r\n  const paint = useCallback(\r\n    (event: MouseEvent) => {\r\n      if (isPainting) {\r\n        const newMousePosition = getCoordinates(event);\r\n        if (mousePosition && newMousePosition) {\r\n          drawLine(mousePosition, newMousePosition);\r\n          setMousePosition(newMousePosition);\r\n        }\r\n      }\r\n    },\r\n    [isPainting, mousePosition]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    canvas.addEventListener(\"mousemove\", paint);\r\n    return () => {\r\n      canvas.removeEventListener(\"mousemove\", paint);\r\n    };\r\n  }, [paint]);\r\n\r\n  const exitPaint = useCallback(() => {\r\n    setIsPainting(false);\r\n    setMousePosition(undefined);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    canvas.addEventListener(\"mouseup\", exitPaint);\r\n    canvas.addEventListener(\"mouseleave\", exitPaint);\r\n    return () => {\r\n      canvas.removeEventListener(\"mouseup\", exitPaint);\r\n      canvas.removeEventListener(\"mouseleave\", exitPaint);\r\n    };\r\n  }, [exitPaint]);\r\n\r\n  const getCoordinates = (event: MouseEvent): Coordinate | undefined => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    let bb = canvas.getBoundingClientRect();\r\n    var offsetX = bb.left;\r\n    var offsetY = bb.top;\r\n    return {\r\n      x: event.clientX - offsetX,\r\n      y: event.clientY - offsetY,\r\n    };\r\n  };\r\n\r\n  const drawLine = (\r\n    originalMousePosition: Coordinate,\r\n    newMousePosition: Coordinate\r\n  ) => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context) {\r\n      context.strokeStyle = \"#0f52ba\";\r\n      context.lineJoin = \"round\";\r\n      context.lineWidth = 4;\r\n      context.beginPath();\r\n      context.moveTo(originalMousePosition.x, originalMousePosition.y);\r\n      context.lineTo(newMousePosition.x, newMousePosition.y);\r\n      context.closePath();\r\n      context.stroke();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      // style={{ border: \"1px solid red\" }}\r\n      ref={canvasRef}\r\n      height={height}\r\n      width={width}\r\n    />\r\n  );\r\n};\r\n\r\nCanvas.defaultProps = {\r\n  width: window.innerWidth / 1.07,\r\n  height: window.innerHeight / 1.07,\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { Droppable } from \"../Dnd/Droppable/Droppable\";\r\nimport { letters, cells, CellsType } from \"../../data/data\";\r\nimport styles from \"./Letters.module.css\";\r\nimport { Letter } from \"./Letter\";\r\nimport { Canvas } from \"../Drawing/Drawing\";\r\nimport { v4 } from \"uuid\";\r\nimport { BiRun } from \"react-icons/bi\";\r\nimport { Draggable } from \"../Dnd/Draggable/Draggable\";\r\n\r\nexport const Letters: React.FC<PtopsType> = ({ paintMode }) => {\r\n  const [data, setData] = useState<CellsType[]>(letters);\r\n  const [newLetter, setNewLetter] = useState(\"\");\r\n  const addNewLetter = () => {\r\n    if (newLetter.length == 0) {\r\n      return;\r\n    }\r\n    const newCell = { id: v4(), content: newLetter.toUpperCase() };\r\n    data.push(newCell);\r\n    setData(data);\r\n    setNewLetter(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Droppable id=\"dr1\" className={styles.droppable}>\r\n        {paintMode && (\r\n          <div className={styles.canvas}>\r\n            <Canvas />\r\n          </div>\r\n        )}\r\n        <div className={styles.cellsWrapper}>\r\n          {cells.map((c) => (\r\n            <div id={c.id} key={c.id} className={styles.itemCell}>\r\n              {c.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Droppable>\r\n      <Droppable id=\"dr2\" className={styles.droppableLetters}>\r\n        {data.map((v) => (\r\n          <Letter\r\n            content={v.content}\r\n            key={v.id}\r\n            className={\r\n              styles.item +\r\n              \" \" +\r\n              (v.content === \"А\" ||\r\n              v.content === \"Е\" ||\r\n              v.content === \"Ё\" ||\r\n              v.content === \"И\" ||\r\n              v.content === \"О\" ||\r\n              v.content === \"У\" ||\r\n              v.content === \"Ы\" ||\r\n              v.content === \"Э\" ||\r\n              v.content === \"Ю\" ||\r\n              v.content === \"Я\"\r\n                ? styles.vowels\r\n                : v.content === \"Ъ\" || v.content === \"Ь\"\r\n                ? styles.marks\r\n                : styles.consonants)\r\n            }\r\n            id={v.id}\r\n          />\r\n        ))}\r\n        <Draggable id={v4()} className={styles.item}>\r\n          <BiRun style={{ color: \"rgb(32, 32, 32)\" }} />\r\n        </Draggable>\r\n      </Droppable>\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n          if (e.currentTarget.value.length <= 1) {\r\n            setNewLetter(e.currentTarget.value);\r\n          } else {\r\n            return;\r\n          }\r\n        }}\r\n        value={newLetter}\r\n      />\r\n      <button onClick={addNewLetter}>Добавить букву</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Types\r\ninterface PtopsType {\r\n  paintMode: boolean;\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Letters } from \"./components/Letters/Letters\";\nimport { IoMdRefreshCircle } from \"react-icons/io\";\nimport { BiPencil } from \"react-icons/bi\";\nimport { ImCancelCircle } from \"react-icons/im\";\n\nfunction App() {\n  function refreshPage() {\n    window.location.reload();\n  }\n  const [paintMode, setPaintMode] = useState(false);\n  const paintModeHandler = () => {\n    setPaintMode(true);\n  };\n  const stopPaintModeHandler = () => {\n    setPaintMode(false);\n  };\n  return (\n    <div className=\"main\" aria-hidden=\"true\">\n      <Letters paintMode={paintMode} />\n      <div onClick={paintModeHandler} className=\"btn btnStart\">\n        <BiPencil />\n      </div>\n      <div onClick={stopPaintModeHandler} className=\" btn btnStop\">\n        <ImCancelCircle />\n      </div>\n      <div onClick={refreshPage} className=\"img\">\n        <IoMdRefreshCircle />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droppable\":\"Letters_droppable__2PaoB\",\"canvas\":\"Letters_canvas__fHYCF\",\"cellsWrapper\":\"Letters_cellsWrapper__1aq1c\",\"itemCell\":\"Letters_itemCell__1oWOK\",\"droppableLetters\":\"Letters_droppableLetters__1Aox8\",\"item\":\"Letters_item__2cJcm\",\"vowels\":\"Letters_vowels__2aZsb\",\"consonants\":\"Letters_consonants__o-vwC\",\"marks\":\"Letters_marks__2hroo\",\"draggable\":\"Letters_draggable__1TvVs\",\"wrapper\":\"Letters_wrapper__1Bu-i\"};"],"sourceRoot":""}