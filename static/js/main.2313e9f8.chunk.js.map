{"version":3,"sources":["components/Letters/Letters.module.css","components/Dnd/Droppable/index.tsx","components/Dnd/Draggable/index.tsx","data/data.ts","components/Letters/Letters.tsx","App.tsx","index.tsx"],"names":["module","exports","Droppable","className","children","id","finalClasses","onTouchStart","e","preventDefault","onDrop","data","dataTransfer","getData","target","appendChild","document","getElementById","onDragOver","Draggable","draggable","onDragStart","setData","stopPropagation","vowels","consonants","cells","marks","Letters","styles","wrapper","cellsWrapper","map","l","i","itemCell","droppableLetters","dragabble","item","App","onClick","window","location","reload","ReactDOM","render","Fragment"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,SAAW,0BAA0B,iBAAmB,kCAAkC,KAAO,sBAAsB,OAAS,wBAAwB,WAAa,4BAA4B,MAAQ,uBAAuB,UAAY,2BAA2B,QAAU,2B,yICCnUC,EAA0C,SAAC,GAIjD,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAC,EACI,EADJA,GAcMC,EAAY,UAAMH,GAAwB,IAChD,OACE,qBACEE,GAAIA,EACJE,aAXY,SAACC,GACfA,EAAEC,kBAWAC,OAjBS,SAACF,GACZA,EAAEC,iBACF,IAAME,EAAOH,EAAEI,aAAaC,QAAQ,YACnCL,EAAEM,OAA0BC,YAAYC,SAASC,eAAeN,KAe/DO,WATc,SAACV,GACjBA,EAAEC,kBASAN,UAAWG,EALb,SAOGF,KC1BMe,EAA0C,SAAC,GAIjD,IAHLd,EAGI,EAHJA,GACAF,EAEI,EAFJA,UACAC,EACI,EADJA,SASME,EAAY,UAAMH,GAAwB,IAChD,OACE,qBACEE,GAAIA,EACJF,UAAWG,EACXc,WAAS,EACTC,YAbS,SAACb,GACZA,EAAEI,aAAaU,QAAQ,WAAad,EAAEM,OAA0BT,KAa9Da,WAViB,SAACV,GACpBA,EAAEe,mBAIF,SAOGnB,KCvBMoB,EAAS,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACvDC,EAAa,CACxB,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEWC,EAAQ,CACnB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEWC,EAAQ,CAAC,SAAK,U,gBCxDdC,EAAU,WACrB,OACE,sBAAKzB,UAAW0B,IAAOC,QAAvB,UACE,cAAC,EAAD,CAAWzB,GAAG,MAAMF,UAAW0B,IAAOE,aAAtC,SACGL,EAAMM,KAAI,SAACC,EAAGC,GAAJ,OACT,qBAAa/B,UAAW0B,IAAOM,SAA/B,SACGF,GADOC,QAKd,eAAC,EAAD,CAAW7B,GAAG,MAAMF,UAAW0B,IAAOO,iBAAtC,UACGZ,EAAOQ,KAAI,SAACC,EAAGC,GAAJ,OACV,cAAC,EAAD,CAAmB/B,UAAW0B,IAAOQ,UAAWhC,GAAI4B,EAApD,SACE,qBAAK9B,UAAS,UAAK0B,IAAOS,KAAZ,YAAoBT,IAAOL,QAAzC,SAAoDS,KADtCC,MAIjBT,EAAWO,KAAI,SAACC,EAAGC,GAAJ,OACd,cAAC,EAAD,CAAmB/B,UAAW0B,IAAOQ,UAAWhC,GAAI4B,EAApD,SACE,qBAAK9B,UAAS,UAAK0B,IAAOS,KAAZ,YAAoBT,IAAOJ,YAAzC,SAAwDQ,KAD1CC,MAIjBP,EAAMK,KAAI,SAACC,EAAGC,GAAJ,OACT,cAAC,EAAD,CAAmB/B,UAAW0B,IAAOQ,UAAWhC,GAAI4B,EAApD,SACE,qBAAK9B,UAAS,UAAK0B,IAAOS,KAAZ,YAAoBT,IAAOF,OAAzC,SAAmDM,KADrCC,a,OCRXK,MAff,WAIE,OACE,iCACE,cAAC,EAAD,IAEA,qBAAKC,QAPT,WACEC,OAAOC,SAASC,UAMaxC,UAAU,MAArC,SACE,cAAC,IAAD,UCTRyC,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,W","file":"static/js/main.2313e9f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellsWrapper\":\"Letters_cellsWrapper__1G5tk\",\"itemCell\":\"Letters_itemCell__88MUr\",\"droppableLetters\":\"Letters_droppableLetters__1lLpY\",\"item\":\"Letters_item__1grE5\",\"vowels\":\"Letters_vowels__jIi1A\",\"consonants\":\"Letters_consonants__2Okb5\",\"marks\":\"Letters_marks__2QYFc\",\"draggable\":\"Letters_draggable__2nt7C\",\"wrapper\":\"Letters_wrapper__govtZ\"};","import React, { DetailedHTMLProps, HTMLAttributes, DragEvent } from \"react\";\r\n\r\nexport const Droppable: React.FC<DroppablePropsType> = ({\r\n  className,\r\n  children,\r\n  id,\r\n}) => {\r\n  const drop = (e: DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer.getData(\"transfer\");\r\n    (e.target as HTMLDivElement).appendChild(document.getElementById(data)!);\r\n  };\r\n  const dropMob = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const allowDrop = (e: DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n  };\r\n  const finalClasses = `${className ? className : \"\"}`;\r\n  return (\r\n    <div\r\n      id={id}\r\n      onTouchStart={dropMob}\r\n      onDrop={drop}\r\n      onDragOver={allowDrop}\r\n      className={finalClasses}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\ntype PropsType = {\r\n  id: string;\r\n};\r\ntype DroppablePropsType = DefaultDivPropsType & PropsType;\r\n","import React, { DetailedHTMLProps, HTMLAttributes, DragEvent } from \"react\";\r\n\r\nexport const Draggable: React.FC<DraggablePropsType> = ({\r\n  id,\r\n  className,\r\n  children,\r\n}) => {\r\n  const drag = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.dataTransfer.setData(\"transfer\", (e.target as HTMLDivElement).id);\r\n  };\r\n\r\n  const notAllowDrop = (e: DragEvent<HTMLDivElement>) => {\r\n    e.stopPropagation();\r\n  };\r\n  const finalClasses = `${className ? className : \"\"}`;\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={finalClasses}\r\n      draggable\r\n      onDragStart={drag}\r\n      onDragOver={notAllowDrop}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n// Types\r\ntype DefaultDivPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLDivElement>,\r\n  HTMLInputElement\r\n>;\r\ntype PropsType = {\r\n  id: string;\r\n};\r\ntype DraggablePropsType = DefaultDivPropsType & PropsType;\r\n","export const vowels = [\"А\", \"Е\", \"Ё\", \"И\", \"О\", \"У\", \"Ы\", \"Э\", \"Ю\", \"Я\"];\r\nexport const consonants = [\r\n  \"Б\",\r\n  \"В\",\r\n  \"Г\",\r\n  \"Д\",\r\n  \"Ж\",\r\n  \"З\",\r\n  \"Й\",\r\n  \"К\",\r\n  \"Л\",\r\n  \"М\",\r\n  \"Н\",\r\n  \"П\",\r\n  \"Р\",\r\n  \"С\",\r\n  \"Т\",\r\n  \"Ф\",\r\n  \"Х\",\r\n  \"Ц\",\r\n  \"Ч\",\r\n  \"Ш\",\r\n  \"Щ\",\r\n];\r\nexport const cells = [\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n  \"\",\r\n];\r\nexport const marks = [\"Ь\", \"Ъ\"];\r\n","import React from \"react\";\r\nimport { Droppable } from \"../Dnd/Droppable/index\";\r\nimport { Draggable } from \"../Dnd/Draggable\";\r\nimport { marks, cells, vowels, consonants } from \"../../data/data\";\r\nimport styles from \"./Letters.module.css\";\r\n\r\nexport const Letters = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Droppable id=\"dr2\" className={styles.cellsWrapper}>\r\n        {cells.map((l, i) => (\r\n          <div key={i} className={styles.itemCell}>\r\n            {l}\r\n          </div>\r\n        ))}\r\n      </Droppable>\r\n      <Droppable id=\"dr1\" className={styles.droppableLetters}>\r\n        {vowels.map((l, i) => (\r\n          <Draggable key={i} className={styles.dragabble} id={l}>\r\n            <div className={`${styles.item} ${styles.vowels}`}>{l}</div>\r\n          </Draggable>\r\n        ))}\r\n        {consonants.map((l, i) => (\r\n          <Draggable key={i} className={styles.dragabble} id={l}>\r\n            <div className={`${styles.item} ${styles.consonants}`}>{l}</div>\r\n          </Draggable>\r\n        ))}\r\n        {marks.map((l, i) => (\r\n          <Draggable key={i} className={styles.dragabble} id={l}>\r\n            <div className={`${styles.item} ${styles.marks}`}>{l}</div>\r\n          </Draggable>\r\n        ))}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Letters } from \"./components/Letters/Letters\";\nimport { IoMdRefreshCircle } from \"react-icons/io\";\n\nfunction App() {\n  function refreshPage() {\n    window.location.reload();\n  }\n  return (\n    <main>\n      <Letters />\n\n      <div onClick={refreshPage} className=\"img\">\n        <IoMdRefreshCircle />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}